{"version":3,"sources":["../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","pages/Admin/Account/components/AccountDetails/AccountDetails.js","pages/Admin/Account/components/AccountDetails/styles.js","pages/Admin/Account/components/AccountProfile/AccountProfile.js","pages/Admin/Account/components/AccountProfile/styles.js","pages/Admin/Account/Account.js"],"names":["SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","React","forwardRef","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","createElement","_extends","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","Avatar","alt","childrenProp","children","imgProps","sizes","src","srcSet","_props$variant","variant","img","system","colorDefault","position","flexShrink","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","Account","state","email","phone","password","handleFieldChange","field","value","newState","setState","onUpdateUser","token","localStorage","getItem","body","fetch","method","headers","Authorization","JSON","stringify","response","ok","json","user","file","uploadImage","_id","console","log","this","rootClassName","classNames","subtitle","title","noPadding","autoComplete","noValidate","TextField","textField","helperText","label","required","onChange","event","target","portletFooter","Button","onClick","marginRight","paddingLeft","paddingRight","paddingTop","paddingBottom","AccountProfile","onUpload","details","info","Typography","emailText","dateText","moment","createdAt","format","avatar","imageurl","accept","input","id","htmlFor","uploadButton","marginTop","text","secondary","marginLeft","progressWrapper","image","files","AccountDetails","connect","authState"],"mappings":"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","file":"static/js/20.aaf06773.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"rwo-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function (props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  // can't use named function expression since the function body references `Grid`\n  // which would point to the render function instead of the actual component\n  Grid.displayName = 'ForwardRef(Grid)';\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if there are children and not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover'\n    }\n  };\n};\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null;\n  var img = src || srcSet;\n\n  if (img) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else {\n    children = childrenProp;\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !img && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component\n   * is used to display an image.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core';\nimport { Button, TextField } from '@material-ui/core';\nimport {\n  Portlet,\n  PortletHeader,\n  PortletLabel,\n  PortletContent,\n  PortletFooter\n} from '../../../../../components';\n\n// Component styles\nimport styles from './styles';\n\nclass Account extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    password: ''\n  };\n\n  componentDidMount() {\n    const { name, email, phone } = this.props.user;\n    this.setState({ name, email, phone });\n  }\n\n  handleFieldChange = (field, value) => {\n    const newState = { ...this.state };\n    newState[field] = value;\n    this.setState(newState);\n  };\n\n  onUpdateUser = async () => {\n    try {\n      const { name, email, phone, password } = this.state;\n      const token = localStorage.getItem('jwtToken');\n      let body = { name, email, phone };\n      if (password) body = { ...body, password };\n      const url = '/users/me';\n      const response = await fetch(url, {\n        method: 'PATCH',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      if (response.ok) {\n        const user = await response.json();\n        if (this.props.file) this.props.uploadImage(user._id, this.props.file);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  render() {\n    const { classes, className } = this.props;\n    const { name, phone, email, password } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Portlet className={rootClassName}>\n        <PortletHeader>\n          <PortletLabel\n            subtitle=\"The information can be edited\"\n            title=\"Profile\"\n          />\n        </PortletHeader>\n        <PortletContent noPadding>\n          <form autoComplete=\"off\" noValidate>\n            <div className={classes.field}>\n              <TextField\n                className={classes.textField}\n                helperText=\"Please specify the first name\"\n                label=\"FUll Name\"\n                margin=\"dense\"\n                required\n                value={name}\n                variant=\"outlined\"\n                onChange={event =>\n                  this.handleFieldChange('name', event.target.value)\n                }\n              />\n              <TextField\n                className={classes.textField}\n                label=\"Email Address\"\n                margin=\"dense\"\n                required\n                value={email}\n                variant=\"outlined\"\n                onChange={event =>\n                  this.handleFieldChange('email', event.target.value)\n                }\n              />\n            </div>\n            <div className={classes.field}>\n              <TextField\n                className={classes.textField}\n                label=\"Phone Number\"\n                margin=\"dense\"\n                type=\"number\"\n                value={phone}\n                variant=\"outlined\"\n                onChange={event =>\n                  this.handleFieldChange('phone', event.target.value)\n                }\n              />\n              <TextField\n                className={classes.textField}\n                label=\"Password\"\n                margin=\"dense\"\n                type=\"password\"\n                value={password}\n                variant=\"outlined\"\n                onChange={event =>\n                  this.handleFieldChange('password', event.target.value)\n                }\n              />\n            </div>\n          </form>\n        </PortletContent>\n        <PortletFooter className={classes.portletFooter}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={this.onUpdateUser}>\n            Save details\n          </Button>\n        </PortletFooter>\n      </Portlet>\n    );\n  }\n}\n\nAccount.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Account);\n","export default theme => ({\n  root: {},\n  field: {\n    margin: theme.spacing(3)\n  },\n  textField: {\n    width: '420px',\n    maxWidth: '100%',\n    marginRight: theme.spacing(3)\n  },\n  portletFooter: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  }\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/core';\nimport { Avatar, Typography, Button } from '@material-ui/core';\nimport {\n  Portlet,\n  PortletContent,\n  PortletFooter\n} from '../../../../../components';\n\n// Component styles\nimport styles from './styles';\n\nclass AccountProfile extends Component {\n  render() {\n    const { user, classes, className, file, onUpload } = this.props;\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Portlet className={rootClassName}>\n        <PortletContent>\n          <div className={classes.details}>\n            <div className={classes.info}>\n              <Typography variant=\"h2\">{user.name}</Typography>\n              <Typography className={classes.emailText} variant=\"body1\">\n                {user.email}\n              </Typography>\n              <Typography className={classes.dateText} variant=\"body1\">\n                Join at: {moment(user.createdAt).format('DD/MM/YYYY')}\n              </Typography>\n            </div>\n            <Avatar\n              className={classes.avatar}\n              src={user.imageurl ? user.imageurl : '/images/avatars/avatar.png'}\n            />\n          </div>\n        </PortletContent>\n        <PortletFooter>\n          <input\n            accept=\"image/*\"\n            className={classes.input}\n            id=\"icon-button-file\"\n            type=\"file\"\n            onChange={onUpload}\n          />\n          <label htmlFor=\"icon-button-file\">\n            <Button\n              className={classes.uploadButton}\n              component=\"span\"\n              color=\"primary\"\n              variant=\"text\">\n              Upload picture\n            </Button>\n          </label>\n          <span>{file && file.name}</span>\n        </PortletFooter>\n      </Portlet>\n    );\n  }\n}\n\nAccountProfile.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(AccountProfile);\n","export default theme => ({\n  root: {},\n  details: {\n    display: 'flex'\n  },\n  emailText: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.text.secondary\n  },\n  dateText: {\n    color: theme.palette.text.secondary\n  },\n  avatar: {\n    marginLeft: 'auto',\n    height: '110px',\n    width: '110px',\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  progressWrapper: {\n    marginTop: theme.spacing(2)\n  },\n  input: { display: 'none' },\n  uploadButton: {\n    marginRight: theme.spacing(2)\n  }\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { AccountProfile, AccountDetails } from './components';\nimport { uploadImage } from '../../../store/actions';\n\n// Component styles\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing(4)\n  }\n});\n\nclass Account extends Component {\n  state = { image: null };\n\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n  };\n\n  render() {\n    const { image } = this.state;\n    const { classes, user, uploadImage } = this.props;\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={4}>\n          <Grid item lg={4} md={6} xl={4} xs={12}>\n            <AccountProfile\n              file={image}\n              user={user}\n              onUpload={event => {\n                const file = event.target.files[0];\n                this.setState({ image: file });\n              }}\n            />\n          </Grid>\n          <Grid item lg={8} md={6} xl={8} xs={12}>\n            <AccountDetails\n              file={image}\n              user={user}\n              uploadImage={uploadImage}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nAccount.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = ({ authState }) => ({\n  user: authState.user\n});\nexport default connect(mapStateToProps, { uploadImage })(\n  withStyles(styles)(Account)\n);\n"],"sourceRoot":""}